plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.30'
    id 'application'
}

task stage {
    dependsOn installDist
}

group = 'parking_service'
version = '1.0'

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/kotlinx' }
    maven { url 'https://dl.bintray.com/kotlin/ktor' }
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    implementation "io.ktor:ktor-server-core:1.5.3"
    implementation "io.ktor:ktor-server-netty:1.5.3"
    implementation "io.ktor:ktor-auth:1.5.3"
    implementation "io.ktor:ktor-auth-jwt:1.5.3"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation "io.ktor:ktor-network-tls-certificates:1.5.3"
    compile 'org.jetbrains.exposed:exposed:0.10.4'
    compile 'org.postgresql:postgresql:42.2.10'
    compile 'joda-time:joda-time:2.10.10'
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
}

test {
    useJUnit()
}

task generateJks(type: JavaExec, dependsOn: 'classes') {
    classpath = sourceSets.main.runtimeClasspath
    main = 'io.ktor.samples.http2.CertificateGenerator'
}

tasks.jar {
    manifest {
        attributes["Main-Class"] = "MainKt"
    }
}

getTasksByName("run", false).first().dependsOn('generateJks')

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}